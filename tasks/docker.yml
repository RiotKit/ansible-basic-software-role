- name: Install docker from main repository
  become: yes
  apt: name="docker.io" state=present update_cache=yes
  when: ansible_distribution != 'Debian'

- include: docker.debian.yml
  when: ansible_distribution == 'Debian'

- name: Delete old docker-compose from package manager
  become: yes
  apt:
      name: docker-compose
      state: absent

- name: Install required Python packages
  become: yes
  apt:
      name: ["{{ setuptools_pkg_name }}", "{{ python_pip_pkg_name }}"]
      state: present

- name: Install recent version of docker compose
  become: yes
  pip:
      name: docker-compose
      state: present

- name: Schedule a clean up for Docker images
  become: yes
  cron:
      name: "docker-clean-up-images"
      minute: "0"
      hour: "22"
      job: "docker rmi $(docker images | awk '/^<none>/ { print $3 }') 2> /dev/null"
      day: "10"
  when: docker_schedule_clean_up|bool

- name: Schedule a clean up for Docker unused containers
  become: yes
  cron:
      name: "docker-clean-up-containers"
      minute: "0"
      hour: "22"
      job: "docker ps --filter 'status=exited' | grep 'weeks ago' | awk '{print $1}' | xargs --no-run-if-empty docker rm 2> /dev/null"
      day: "5"
  when: docker_schedule_clean_up|bool
